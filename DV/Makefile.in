.IGNORE:

SHELL = /bin/sh

# PATHS
prefix = @prefix@
bindir = $(prefix)/bin
libdir = $(prefix)/lib
DV_HOME = @DV_HOME@

# Programs
CTOF = mfi
PERL = @PERL@
RPCGEN = @RPCGEN@
RANLIB = @RANLIB@
AR = @AR@
CC = @CC@
F77 = @F77@

BBH_SYSTEM=@BBH_SYSTEM@

# Compiler Commands
F77_TRANSFORM = @F77_TRANSFORM@

LIBS       = @LIBS@ @LIBGL@ -lDVCliser @CCF77LIBS@ 
RLIBS      = @LIBS@ -lDVCliser @CCF77LIBS@ 
LDFLAGS    = @LDFLAGS@ @APP_LIB_PATHS@ -L.

CC       = @CC@
CFLAGS   = -c @CFLAGS@
CPPFLAGS = @CPPFLAGS@ @APP_INCLUDE_PATHS@ @DEFS@ -I$(DV_HOME)/ -I$(DV_HOME)/DV_gui/ -I$(DV_HOME)/vis/ -I$(DV_HOME)/DVCliser/ 

CC_COMP  = $(CC) $(CFLAGS) $(CPPFLAGS)
CC_LOAD  = $(CC) $(LDFLAGS) -L$(DV_HOME)/DVCliser/

F77      = @F77@
F77FLAGS = @F77FLAGS@

F77_COMP   = $(F77) -c $(F77FLAGS)
F77_LOAD   = $(F77) $(F77FLAGS) $(LDFLAGS)

.f.o:
	$(F77_COMP) -c $*.f

.c.o:
	@CC_TRANSFORM@ $*.c > $*_.c
	$(CC_COMP) -c $*_.c
	mv $*_.o $*.o

AUX = DV_gui util vis DVCliser rnpl_diff/1d misc_f77 rnpl_diff/2d misc_f77 rnpl_diff/3d misc_f77 DV_calc

EXECUTABLES = DV DVR sdftodv
LIBFILES = lib/default_opts.dvo

# Primary target

all: DV.o
	echo; echo "Making in $(AUX)"
	for f in $(AUX); do \
		(cd $$f; make) \
	done
	make DV
	make DVR

install: all
	if test ! -d $(prefix); then\
		mkdir $(prefix);\
	fi
	if test ! -d $(bindir); then\
		mkdir $(bindir);\
	fi
	if test ! -d $(libdir); then\
		mkdir $(libdir);\
	fi
	if test ! -d $(libdir)/DV; then\
		mkdir $(libdir)/DV;\
	fi
	cp DV DVR util/dvcomm util/dvrcomm bin/sdftodv_f bin/dv_cat bin/dv_eval_r util/sdftodv util/asciitosdf $(bindir)
	cp $(LIBFILES) $(libdir)/DV

DV.o: DV.c reg.h misc.h DVault.h instr.h DV_gui/DV_forms.h DV_calc/parse.h
	@CC_TRANSFORM@ DV.c > DV_.c
	$(CC_COMP) -c DV_.c
	mv DV_.o DV.o

reg.o: reg.c reg.h misc.h s_iter.h
	@CC_TRANSFORM@ reg.c > reg_.c
	$(CC_COMP) -c reg_.c
	mv reg_.o reg.o

instr.o: instr.c instr.h reg.h s_iter.h
	@CC_TRANSFORM@ instr.c > instr_.c
	$(CC_COMP) -c instr_.c
	mv instr_.o instr.o

misc.o: misc.c misc.h 
	@CC_TRANSFORM@ misc.c > misc_.c
	$(CC_COMP) -c misc_.c
	mv misc_.o misc.o

fncs.o: fncs.c fncs.h reg.h misc.h s_iter.h
	@CC_TRANSFORM@ fncs.c > fncs_.c
	$(CC_COMP) -c fncs_.c
	mv fncs_.o fncs.o

null_int.o: null_int.c fncs.h reg.h misc.h s_iter.h
	@CC_TRANSFORM@ null_int.c > null_int_.c
	$(CC_COMP) -c null_int_.c
	mv null_int_.o null_int.o

geod_int.o: geod_int.c fncs.h reg.h misc.h s_iter.h
	@CC_TRANSFORM@ geod_int.c > geod_int_.c
	$(CC_COMP) -c geod_int_.c
	mv geod_int_.o geod_int.o

s_iter.o: s_iter.c s_iter.h reg.h 
	@CC_TRANSFORM@ s_iter.c > s_iter_.c
	$(CC_COMP) -c s_iter_.c
	mv s_iter_.o s_iter.o

OBJS	=	DV.o reg.o misc.o instr.o misc_f77/misc_f77.o fncs.o s_iter.o DV_gui/DV_forms.o DV_gui/DV_gui.o vis/send_bbh_xyz.o rnpl_diff/1d/updates_f1.o rnpl_diff/2d/updates_f2.o rnpl_diff/3d/updates_f3.o vis/send_accept_sdf.o vis/send_gl_canvas.o misc_f77/2Dclusterer.o misc_f77/dc_clusterer.o vis/scr_save.o null_int.o geod_int.o DV_calc/DV_calc.tab.o DV_calc/lex.DV_calc.o DV_calc/parse.o

ROBJS	=	DV.o reg.o misc.o instr.o misc_f77/misc_f77.o fncs.o s_iter.o DV_remote.o rnpl_diff/1d/updates_f1.o rnpl_diff/2d/updates_f2.o rnpl_diff/3d/updates_f3.o misc_f77/2Dclusterer.o misc_f77/dc_clusterer.o null_int.o geod_int.o DV_calc/DV_calc.tab.o DV_calc/lex.DV_calc.o DV_calc/parse.o

DV: $(OBJS)
	$(CC_LOAD) -Wl,-M $(OBJS) $(LIBS) $(LIBGL) -o DV > DV.map

DVR: $(ROBJS)
	$(CC_LOAD) $(ROBJS) $(RLIBS) -o DVR

clean:
	echo; echo "Cleaning up"
	for f in $(AUX); do \
		(cd $$f; make clean) \
	done
	(cd bin; rm $(EXECUTABLES) > /dev/null 2>&1) 
	rm $(EXECUTABLES) > /dev/null 2>&1
	rm *_.c > /dev/null 2>&1
	rm *.o > /dev/null 2>&1
	rm *~ > /dev/null
	rm *.sdf > /dev/null 2>&1
	rm config.cache config.log config.status > /dev/null 2>&1
	rm -rf autom4te.cache > /dev/null 2>&1
	rm Makefile > /dev/null 2>&1
