#!/bin/sh

trace_args="true"
trace="false"

ctrl_c_trap()
{
   dvrcomm "exit"
   exit 1
}

Usage() {
cat<<END

Applies the DV "eval_r" function to *1* file then saves the result to disk.

Usage: dv_eval_rs oname R1 R2 dR Ntheta Nphi [-i 'ivec'] [-s] file1

 oname -- output register name
 R1,R1,dR -- range of radii to evaluate at
 Ntheta,Nphi -- size of grid
 -i -- passed to sdftodv
 -s -- passed to sdftodv

 order of the optional arguments is arbitrary, but oname must be first
 and the sdf files must come at the end

NOTE: this program sets DVRHOST to `hostname`, 
      and starts and stops DVR on the local machine
END
}

num=0
snum=7

case $# in
0) Usage;;
1) Usage;;
2) Usage;;
3) Usage;;
4) Usage;;
5) Usage;;
6) Usage;;
*) oname=$1
   R1=$2
   R2=$3
   dR=$4
   Ntheta=$5
   Nphi=$6
   ivec1=""
   ivec2="NULL"
   s=""
   get_ivec2="false"
   for i in $@
   do
      num=`expr $num + 1`
      if test $get_ivec2 = "true"
      then
         ivec2=$i
         get_ivec2="false"
      fi
      case $i in 
        "-s") s="-s"; snum=`expr $num + 1`;;
        "-i") ivec1="-i"; get_ivec2="true"; snum=`expr $num + 2`;;
        *);;
      esac
   done

   if test $trace_args = "true"
   then
      echo "oname =" $oname
      echo "R1 =" $R1
      echo "R2 =" $R2
      echo "dR =" $dR
      echo "Ntheta =" $Ntheta
      echo "Nphi =" $Nphi
      echo "sdftodv options =" "-r" $s $ivec1 '$ivec2'
   fi

   DVRHOST=`hostname`
   export DVRHOST
   DVR&
   trap ctrl_c_trap 2

   # give DVR time to set up it's input port
   sleep 1

   num=1
   first="true"
   for i in $@
   do
      if test $num -ge $snum
      then
         if test $first = "true"
         then
            if test $trace = "true"
            then
               echo "executing: sdftodv -r -n $oname $s $ivec1 '$ivec2' $i"
            fi
            if test $ivec2 = "NULL"
            then
               sdftodv -r -n $oname $s $i
            else
               sdftodv -r -n $oname $a $s $ivec1 "$ivec2" $i
            fi
            for R in `seq $R1 $dR $R2`
            do
               oname_r=\"$oname'_eval_r_'$R\"
               args=\'$R,$Ntheta,$Nphi\'
               dvrcomm "mask = $oname"
               dvrcomm "mask_val = 0"
               dvrcomm "$oname_r = eval_r($oname,$args)"
               dvrcomm "save $oname_r > $oname_r"
               dvrcomm "delete $oname_r"
            done
            dvrcomm "delete $oname" 
            first="false"
         else
            echo "Skipping file" $i " ... can only handle 1 file at this stage"
         fi
      fi
      num=`expr $num + 1`
   done 
   dvrcomm "exit"
   sleep 1
esac
